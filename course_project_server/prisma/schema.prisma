generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Subscription {
  id       Int                  @id @default(autoincrement())
  name     String               @unique
  duration Int
  price    Float
  clients  SubscriptionClient[]
}

model SubscriptionClient {
  clientId       Int
  subscriptionId Int
  daysLeft       Int
  client         Client       @relation(fields: [clientId], references: [id])
  subscription   Subscription @relation(fields: [subscriptionId], references: [id])

  @@id([subscriptionId, clientId])
}

model Client {
  id               Int                  @id @default(autoincrement())
  email            String               @unique
  passwordHash     String
  name             String
  age              Int
  gender           String
  trainerId        Int?
  attendance       Attendance[]
  trainer          Trainer?             @relation(fields: [trainerId], references: [id])
  subscriptions    SubscriptionClient[]
  trainingPrograms TrainingProgram[]
}

model Attendance {
  id        Int      @id @default(autoincrement())
  clientId  Int
  date      DateTime
  client    Client   @relation(fields: [clientId], references: [id])
}

model Trainer {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  name         String
  age          Int
  gender       String
  experience   Int
  price        Float
  isAdmin      Boolean  @default(false)
  picture      String
  clients      Client[]
}

model TrainingProgram {
  id               Int              @id @default(autoincrement())
  name             String
  time             DateTime
  clientId         Int
  dayOfWeek        Int
  exerciseMachines ProgramMachine[]
  muscleGroups     ProgramMuscle[]
  client           Client           @relation(fields: [clientId], references: [id])
}

model ProgramMachine {
  trainingProgramId Int
  exerciseMachineId Int
  exerciseMachine   ExerciseMachine @relation(fields: [exerciseMachineId], references: [id])
  trainingProgram   TrainingProgram @relation(fields: [trainingProgramId], references: [id])

  @@id([trainingProgramId, exerciseMachineId])
}

model ExerciseMachine {
  id               Int              @id @default(autoincrement())
  name             String           @unique
  amount           Int
  description      String
  picture          String
  muscleGroups     MachineMuscle[]
  trainingPrograms ProgramMachine[]
}

model MachineMuscle {
  muscleGroupId     Int
  exerciseMachineId Int
  exerciseMachine   ExerciseMachine @relation(fields: [exerciseMachineId], references: [id])
  muscleGroup       MuscleGroup     @relation(fields: [muscleGroupId], references: [id])

  @@id([muscleGroupId, exerciseMachineId])
}

model MuscleGroup {
  id               Int             @id @default(autoincrement())
  name             String          @unique
  exerciseMachines MachineMuscle[]
  trainingPrograms ProgramMuscle[]
}

model ProgramMuscle {
  trainingProgramId Int
  muscleGroupId     Int
  muscleGroup       MuscleGroup     @relation(fields: [muscleGroupId], references: [id])
  trainingProgram   TrainingProgram @relation(fields: [trainingProgramId], references: [id])

  @@id([trainingProgramId, muscleGroupId])
}
