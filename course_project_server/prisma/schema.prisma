generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Subscription {
  id        Int     @id      @default(autoincrement())
  name      String  @unique
  duration  Int
  price     Float

  clients   SubscriptionClient[]
}

model SubscriptionClient {
  clientId        Int 
  subscriptionId  Int
  daysLeft        Int

  client          Client        @relation(fields: [clientId], references: [id])
  subscription    Subscription  @relation(fields: [subscriptionId], references: [id])

  @@id([subscriptionId, clientId])
}

model Client {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  passwordHash   String
  name           String
  age            Int
  gender         String

  trainerId      Int?
  trainer        Trainer?  @relation(fields: [trainerId], references: [id])
  attendance     Attendance[]
  trainingPrograms TrainingProgram[]
  subscriptions  SubscriptionClient[]
}

model Attendance {
  id         Int     @id @default(autoincrement())
  client     Client  @relation(fields: [clientId], references: [id])
  clientId   Int
  date       DateTime
  spentTime  DateTime
}

model Trainer {
  id            Int     @id @default(autoincrement())
  email         String  @unique
  passwordHash  String
  name          String
  age           Int
  gender        String
  experience    Int
  price         Float

  clients       Client[]
}

model TrainingProgram {
  id                Int       @id  @default(autoincrement())
  name              String
  date              DateTime
  time              DateTime

  clientId          Int
  client            Client    @relation(fields: [clientId], references: [id])
  exersiseMachines  ProgramMachine[]
  muscleGroups     ProgramMuscle[]
}

model ProgramMachine {
  trainingProgramId  Int
  exersiseMachineId  Int

  trainingProgram    TrainingProgram  @relation(fields: [trainingProgramId], references: [id])
  exersiseMachine    ExersiseMachine  @relation(fields: [exersiseMachineId], references: [id])

  @@id([trainingProgramId, exersiseMachineId])
}

model ExersiseMachine {
  id                Int     @id  @default(autoincrement())
  name              String  @unique
  amount            Int
  pictureLink       String
  description       String

  trainingPrograms  ProgramMachine[]
  muscleGroups     MachineMuscle[]
}

model MachineMuscle {
  muscleGroupId     Int
  exersiseMachineId  Int

  muscleGroup       MuscleGroup     @relation(fields: [muscleGroupId], references: [id])
  exersiseMachine    ExersiseMachine  @relation(fields: [exersiseMachineId], references: [id])

  @@id([muscleGroupId, exersiseMachineId])
}

model MuscleGroup {
  id                Int     @id  @default(autoincrement())
  name              String  @unique

  trainingPrograms  ProgramMuscle[]
  exersiseMachines  MachineMuscle[]
}

model ProgramMuscle {
  trainingProgramId  Int
  muscleGroupId     Int

  trainingProgram    TrainingProgram  @relation(fields: [trainingProgramId], references: [id])
  muscleGroup       MuscleGroup     @relation(fields: [muscleGroupId], references: [id])

  @@id([trainingProgramId, muscleGroupId])
}